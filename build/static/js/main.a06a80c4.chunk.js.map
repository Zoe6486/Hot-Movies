{"version":3,"sources":["components/MovieList/Movie.jsx","components/MovieList/index.jsx","server/topMovie.js","common/Pager/FuncPager.jsx","components/MovieContainer/index.jsx","App.js","index.js"],"names":["IMG_Ex","LINK_EX","Movie","props","movie","React","createElement","href","id","target","rel","src","backdrop_path","alt","className","title","vote_average","toFixed","MovieList","_ref","movies","movieList","map","m","key","Fragment","defaultProps","prototype","PropTypes","array","isRequired","TOKEN","Pager","currentPage","pageNumber","totalPage","handerClick","min","minNumber","getMin","pageNumbers","maxNumber","i","push","getPageNumbers","getMax","concat","onClick","page","MovieContainer","setMovies","useState","setPage","setTotalPage","useEffect","resp","async","axios","get","params","headers","Authorization","data","getTopMovies","results","total_pages","targetPage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a06a80c4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Movie.css\";\n\n// TMDB 电影图片和链接地址的前缀\nconst IMG_Ex = \"https://media.themoviedb.org/t/p/w440_and_h660_face\";\nconst LINK_EX = \"https://www.themoviedb.org/movie/\";\n\nexport default function Movie(props) {\n  const { movie } = props;\n  return (\n    <div>\n      <a href={LINK_EX + movie.id} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={IMG_Ex + movie.backdrop_path} alt=\"\" />\n      </a>\n      <a href={LINK_EX + movie.id} target=\"_blank\" rel=\"noopener noreferrer\">\n        <p className=\"title\">{movie.title}</p>\n      </a>\n      <p className=\"rate\">Rate：{movie.vote_average.toFixed(2)}</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Movie from \"./Movie\";\nimport \"./Movie.css\";\n\n/**\n * 显示电影列表的组件:根据传入的电影数据，渲染到页面\n * 纯展示组件，没有状态，数据来自外部传入的props\n * @param {*} movies:传入的电影数据数组\n * @returns\n */\nexport default function MovieList({ movies }) {\n  const movieList = movies.map((m) => <Movie key={m.id} movie={m} />);\n  return (\n    <>\n      <header className=\"header\">\n        <h1>Top Movies</h1>\n      </header>\n\n      <div className=\"imgContainer\">{movieList}</div>\n    </>\n  );\n}\nMovieList.defaultProps = {\n  movies: [],\n};\nMovieList.prototype = {\n  movies: PropTypes.array.isRequired,\n};\n","import axios from \"axios\";\n// \"https://api.themoviedb.org/3//movie/top_rated?page=1\"\n\nconst TOKEN =\n  \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzU3YTMyMmNiOTFlMDA2YzA4M2FjNGFiOGMxMWZlMSIsInN1YiI6IjY1ZGJjOGNmYzJiOWRmMDE4MzhjNzQ1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.qpe3gu-nGbeBEyR1yOuProTy6-U66VUydS1WblrnzYE\";\n\nexport async function getTopMovies(page) {\n  // 先在package.json中配置代理，方便维护更改\n  const res = await axios.get(\"https://api.themoviedb.org/3/movie/top_rated\", {\n    params: { page },\n    headers: { Authorization: \"Bearer \" + TOKEN },\n  });\n  return res.data;\n}\n","import React from \"react\";\nimport \"./Pager.css\";\n\n/**\n *\n * @param {*} props\n * currentPage :当前页数\n * pageNumber :页容量\n * totalPage :总页数\n * handerClick :回调函数\n * @returns\n */\nexport default function Pager(props) {\n  const {\n    currentPage,\n    pageNumber = 10, //设置默认值\n    totalPage,\n    handerClick,\n  } = props;\n\n  const min = getMin(currentPage, pageNumber, totalPage);\n  const max = getMax(min, pageNumber);\n  const pageNumbers = getPageNumbers(min, max);\n  if (!totalPage) {\n    return null;\n  }\n  return (\n    <div className=\"container\">\n      {/* 首页 */}\n      <span\n        className={`pager ${currentPage === 1 ? \"disabled\" : \"\"}`}\n        onClick={() => {\n          const targetPage = 1;\n          handerClick(targetPage);\n        }}\n      >\n        {\"|<<\"}\n      </span>\n      {/* 上一页 */}\n      <span\n        className={`pager ${currentPage === 1 ? \"disabled\" : \"\"}`}\n        onClick={() => {\n          const targetPage = currentPage <= 1 ? 1 : currentPage - 1;\n          handerClick(targetPage);\n        }}\n      >\n        {\"<\"}\n      </span>\n      {/* 数字页 */}\n      {pageNumbers.map((page, i) => (\n        <span\n          key={i}\n          className={`pager ${currentPage === page ? \"active\" : \"\"}`}\n          onClick={() => {\n            const targetPage = page;\n            handerClick(targetPage);\n          }}\n        >\n          {page}\n        </span>\n      ))}\n      {/* 下一页 */}\n      <span\n        className={`pager ${currentPage === totalPage ? \"disabled\" : \"\"}`}\n        onClick={() => {\n          const targetPage =\n            currentPage >= totalPage ? totalPage : currentPage + 1;\n          handerClick(targetPage);\n        }}\n      >\n        {\">\"}\n      </span>\n\n      {/* 尾页 */}\n      <span\n        className={`pager ${currentPage === totalPage ? \"disabled\" : \"\"}`}\n        onClick={() => {\n          const targetPage = totalPage;\n          handerClick(targetPage);\n        }}\n      >\n        {\">>|\"}\n      </span>\n      <span className=\"pager show\">\n        {currentPage} / {totalPage}\n      </span>\n    </div>\n  );\n}\n\n// 辅助函数\nfunction getMin(currentPage, pageNumber, totalPage) {\n  let minNumber = currentPage - pageNumber / 2;\n  if (minNumber <= 1) {\n    minNumber = 1;\n  }\n  if (minNumber >= totalPage - pageNumber + 1) {\n    minNumber = totalPage - pageNumber + 1;\n  }\n  return minNumber;\n}\n\nfunction getMax(minNumber, pageNumber) {\n  return minNumber + pageNumber - 1;\n}\nfunction getPageNumbers(minNumber, maxNumber) {\n  let pageNumbers = [];\n  for (let i = minNumber; i <= maxNumber; i++) {\n    pageNumbers.push(i);\n  }\n  return pageNumbers;\n}\n","import React, { useEffect, useState } from \"react\";\nimport MovieList from \"../MovieList\";\nimport { getTopMovies } from \"../../server/topMovie\";\nimport Pager from \"../../common/Pager/FuncPager\";\n\n/**\n * 用来处理电影数据（提供数据，控制数据的变化），并传递数据给电影列表组件\n * 有状态组件\n * @returns\n */\nexport default function MovieContainer() {\n  // 电影列表数据\n  const [movies, setMovies] = useState([]);\n  // 显示哪一页的电影列表\n  const [page, setPage] = useState(1);\n  // 电影总页数\n  const [totalPage, setTotalPage] = useState(0);\n  // 页容量\n  const [pageNumber] = useState(10);\n  // 获取数据：当页码变化时，重新获取数据\n  useEffect(() => {\n    // 在useEffect内部定义一个异步函数\n    // 使用立即执行函数\n    (async function () {\n      const resp = await getTopMovies(page);\n      // console.log(resp);\n      setMovies(resp.results); // 设置电影数据列表\n      setTotalPage(resp.total_pages); // 设置电影总页数\n    })();\n  }, [page]); // page为依赖项\n\n  return (\n    <div>\n      <MovieList movies={movies} />\n      {/* 使用分页器组件 */}\n      <Pager\n        currentPage={page}\n        pageNumber={pageNumber}\n        totalPage={totalPage}\n        handerClick={(targetPage) => {\n          // 重新设置page\n          setPage(targetPage);\n          // 从而会调用useEffect的运行，引发页面重新渲染\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport MovieContainer from \"./components/MovieContainer\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <MovieContainer />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}